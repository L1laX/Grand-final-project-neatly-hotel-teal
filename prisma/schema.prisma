generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id    Int     @id @default(autoincrement())
  email String  @unique
  username  String @unique
  password String
  role String
  image String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  userProfile userProfile?
  customerBooking customerBooking[]
}

model userProfile{
  id Int @id @default(autoincrement())
  user user  @relation(fields: [user_id],references: [id])
  user_id Int @unique
  fullName String
  id_number String
  dateOfBirth DateTime
  country String
  creditcard creditcard @relation(fields: [creditCard_id],references: [id])
  creditCard_id Int @unique
}
model creditcard{
  id Int @id @default(autoincrement())
  cardNumber String
  cardOwner String
  expiryDate String
  cvc_cvv String
  user_profile userProfile?
}

model room {
  name            String
  size            String
  bedType         String
  status          String
  checkInDate     DateTime?
  checkOutDate    DateTime?
  guests          Int
  description     String
  roomMainImage   String
  pricePerNight   Int
  promotionPrice  Int
  id              Int               @id @default(autoincrement())
  customerBooking customerBooking[]
  roomAmminity    roomAmminity[]
  roomGallery     roomGallery[]
}
model room{
  id Int @id @default(autoincrement())
  name String
  size String
  bedType String
  status String
  guests Int
  checkInDate DateTime? 
  checkOutDate DateTime?
  description String
  roomMainImage String
  pricePerNight Int
  promotionPrice Int
  customerBooking customerBooking[]
  roomAmminity roomAmminity[]
  roomGallery roomGallery[]
}
model roomAmminity{
id Int @id @default(autoincrement())
room room @relation(fields: [room_id],references: [id])
room_id Int
}
model roomGallery{
id Int @id @default(autoincrement())
room room @relation(fields: [room_id],references: [id])
room_id Int
image String

}

model hotelInfo {
  id               Int    @id @default(autoincrement())
  hotelName        String
  image            String
  hotelDescription String
}

model customerBooking{
  id  Int @id @default(autoincrement())
  user user @relation(fields: [user_id],references: [id])
  user_id Int
  customerName String
  customerEmail String
  customer_id_number String
  customerCountry String
  customerDateOfBirth DateTime 
  paymentType String
  paymentStatus String
  discount Int
  guestCount Int
  totalPrice Int
  additionalRequest String?
  room room @relation(fields: [room_id],references: [id])
  room_id Int
  checkInDate     DateTime
  checkOutDate    DateTime
  created_at DateTime @default(now())
  last_updated_at DateTime @updatedAt
  bookingRequest bookingRequest[]
}

model bookingRequest{
  id  Int @id @default(autoincrement())
  customerBooking customerBooking @relation(fields: [booking_id],references: [id])
  booking_id Int
  name String
  price Int
}

model hotelInfo{
  id Int @id @default(autoincrement())
  hotelName String
  image String
  hotelDescription String

}
