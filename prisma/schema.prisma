// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  user_id    Int     @id @default(autoincrement())
  email String  @unique
  username  String @unique
  password String
  role String
  image String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user_profile user_profile?
  customer_booking customer_booking[]
}

model user_profile{
  user_profile_id Int @id @default(autoincrement())
  user user  @relation(fields: [user_id],references: [user_id])
  user_id Int @unique
  fullName String
  id_number String
  dateOfBirth DateTime
  country String
  creditcard creditcard @relation(fields: [creditCard_id],references: [creditcard_id])
  creditCard_id Int @unique
}
model creditcard{
  creditcard_id Int @id @default(autoincrement())
  cardNumber String
  cardOwner String
  expiryDate String
  cvc_cvv String
  user_profile user_profile?
}

//new on 5/feb

model room{
  room_id Int @id @default(autoincrement())
  name String
  size String
  bedType String
  status String
  guests Int
  checkInDate DateTime? 
  checkOutDate DateTime?
  description String
  roomMainImage String
  pricePerNight Int
  promotionPrice Int
  customer_booking customer_booking[]
  room_amminity room_amminity[]
  room_gallery room_gallery[]
}
model room_amminity{
room_amminity_id Int @id @default(autoincrement())
room room @relation(fields: [room_id],references: [room_id])
room_id Int
}
model room_gallery{
room_gallery_id Int @id @default(autoincrement())
room room @relation(fields: [room_id],references: [room_id])
room_id Int
image String
}


model customer_booking{
  customer_booking_id  Int @id @default(autoincrement())
  user user @relation(fields: [user_id],references: [user_id])
  user_id Int
  customerName String
  customerEmail String
  customer_id_number String
  customerCountry String
  customerDateOfBirth DateTime 
  paymentType String
  paymentStatus String
  discount Int
  guestCount Int
  totalPrice Int
  additionalRequest String?
  room room @relation(fields: [room_id],references: [room_id])
  room_id Int
  checkInDate     DateTime
  checkOutDate    DateTime
  created_at DateTime @default(now())
  last_updated_at DateTime @updatedAt
  booking_request booking_request[]
}

model booking_request{
  booking_request_id  Int @id @default(autoincrement())
  customer_booking customer_booking @relation(fields: [booking_id],references: [customer_booking_id])
  booking_id Int
  name String
  price Int
}


model hotel_info{
  hotel_info_id Int @id @default(autoincrement())
  hotelName String
  image String
  hotelDescription String
}

model promotion{
  promotion_id  Int @id @default(autoincrement())
  promotionCode String
  discount Int
}