generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  email           String            @unique
  username        String            @unique
  password        String
  role            String
  image           String?
  created_at      DateTime          @default(now())
  updated_at      DateTime          @updatedAt
  id              Int               @id @default(autoincrement())
  customerBooking customerBooking[]
  userProfile     userProfile?
}

model creditcard {
  cardNumber  String
  cardOwner   String
  expiryDate  String
  cvc_cvv     String
  id          Int          @id @default(autoincrement())
  userProfile userProfile?
}

model room {
  name            String
  size            String
  bedType         String
  status          String
  checkInDate     DateTime?
  checkOutDate    DateTime?
  guests          Int
  description     String
  roomMainImage   String
  pricePerNight   Int
  promotionPrice  Int
  id              Int               @id @default(autoincrement())
  customerBooking customerBooking[]
  roomAmminity    roomAmminity[]
  roomGallery     roomGallery[]
}

model promotion {
  promotionCode String
  discount      Int
  id            Int    @id @default(autoincrement())
}

model bookingRequest {
  id              Int             @id @default(autoincrement())
  booking_id      Int
  name            String
  price           Int
  customerBooking customerBooking @relation(fields: [booking_id], references: [id])
}

model customerBooking {
  id                  Int              @id @default(autoincrement())
  user_id             Int
  customerName        String
  customerEmail       String
  customer_id_number  String
  customerCountry     String
  customerDateOfBirth DateTime
  paymentType         String
  paymentStatus       String
  discount            Int
  guestCount          Int
  totalPrice          Int
  additionalRequest   String?
  room_id             Int
  checkInDate         DateTime
  checkOutDate        DateTime
  created_at          DateTime         @default(now())
  last_updated_at     DateTime
  bookingRequest      bookingRequest[]
  room                room             @relation(fields: [room_id], references: [id])
  user                user             @relation(fields: [user_id], references: [id])
}

model hotelInfo {
  id               Int    @id @default(autoincrement())
  hotelName        String
  image            String
  hotelDescription String
}

model roomAmminity {
  id      Int  @id @default(autoincrement())
  room_id Int
  room    room @relation(fields: [room_id], references: [id])
}

model roomGallery {
  id      Int    @id @default(autoincrement())
  room_id Int
  image   String
  room    room   @relation(fields: [room_id], references: [id])
}

model userProfile {
  id            Int        @id @default(autoincrement())
  user_id       Int        @unique
  fullName      String
  id_number     String
  dateOfBirth   DateTime
  country       String
  creditCard_id Int        @unique
  creditcard    creditcard @relation(fields: [creditCard_id], references: [id])
  user          user       @relation(fields: [user_id], references: [id])
}
